cmake_minimum_required( VERSION 3.0 )

project(gold)

cmake_policy(SET CMP0079 NEW)

if(!MSVC)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-gnu-zero-variadic-macro-arguments")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-gnu-zero-variadic-macro-arguments")
endif(!MSVC)

add_subdirectory(zlib)
if (CMAKE_BUILD_TYPE EQUAL "Debug")
	set(ZLIB_LIBRARY ${LIBRARY_OUTPUT_DIRECTORY}/zlibd CACHE INTERNAL "")
else()
	set(ZLIB_LIBRARY ${LIBRARY_OUTPUT_DIRECTORY}/zlib CACHE INTERNAL "")
endif(CMAKE_BUILD_TYPE EQUAL "Debug")
set(ZLIB_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/zlib/;${CMAKE_CURRENT_BINARY_DIR}/zlib/" CACHE INTERNAL "")
add_subdirectory(freetype2)
set(FREETYPE_LIBRARY ${LIBRARY_OUTPUT_DIRECTORY}/freetype CACHE INTERNAL "")
set(FREETYPE_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/freetype2/include CACHE INTERNAL "")

add_subdirectory(libuv)
#set(SNAPPY_INSTALL ON CACHE INTERNAL "")
#add_subdirectory(snappy)
set(ENABLE_SNAPPY OFF CACHE INTERNAL "")
set(ENABLE_ZLIB "BUNDLED" CACHE INTERNAL "")
#set(SNAPPY_INCLUDE_DIRS ./snappy CACHE INTERNAL "")
add_subdirectory(mongo-c-driver)

add_subdirectory(SDL)
add_subdirectory(SDL_image)
add_subdirectory(SDL_ttf)
add_subdirectory(json)
add_subdirectory(bullet3)

include(cmake/brtshaderc.cmake)
include(cmake/uSockets.cmake)
include(cmake/uWebSockets.cmake)
include(cmake/bgfxConfig.cmake)
include(cmake/cryptopp.cmake)
